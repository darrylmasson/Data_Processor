Neutron Generator raw data processor

TOC:
1. Usage
2. Description of functionality
3. Code heirarchy
4. Maintenance


1. Usage

$ ./NG_dp -f rawdatafile [-s source -c config -x special]
Notes: the rawdatafile is only the timestamp supplied by wavedump: the rawdata/ and .dat are automatically added.  Source is the source used for acquisition.  Config is an alternate configuration file located in config/.  Special deals with simulating other digitizers samplerates and resolutions.


2. Discription of functionality

The configuration file is located in config/ and contains values like fast and slow integration times for each valid digitizer, and also which processing methods are to be used.  The output of the processing is a root file with the same timestamp as the raw data file and is located in prodata/.


3. Code heirarchy

The heirarchy of code is as follows:
Digitizer : lowest level, contains information about digitizer characteristics.
Event : one instance created per channel of data.  Contains baseline calculations and peakfinding algorithm.
Method : ABC for processing methods.  Mainly virtual functions for inheritance.  File also contains fundamental types.
CCM : integrator and pulse gradient.  Inherits from Method. Slow and fast integration times stored in config file. One instance per channel.
DFT : fourier series. Inherits from Method. Once instance per channel.
XSQ : fitting. Template waveforms stored in config/standard_events.root. Inherits from Method. One instance per channel.
Processor : where most of the action happens. Instantiates all classes used and pushes all raw data through processing scripts.
Config : Parses configuration file and raw data header.
NG_dp : top level, contains interfacing and version checking.


4. Maintenance

To add additional processing methods, they must follow the same syntax as the existing methods, i.e. must inherit from Method, must have the TTree as a static member, etc.  If the method requires configuration settings that can change between uses then the configuration file may need to be updated, in which case the configuration file parsing function will also need modification.  Once ready for compilation into the project, add the relevant entry into the SRCS line in the Makefile.
